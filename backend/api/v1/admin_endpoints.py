# routers/admin_router.py
from fastapi import APIRouter, Depends, HTTPException
from schemas.admin_validators import LoginRequest, Car, User, CarResponse, ChangePass
from api.dependencies.admin_dependencies import get_admin_security, get_admin_repository
from services.admin_security import AdminSecurity
from repositories.admin_repositories import BitrixRepository

# –°–æ–∑–¥–∞—ë–º —Ä–æ—É—Ç–µ—Ä —Å —Ç–µ–≥–æ–º –∏ –ø—Ä–µ—Ñ–∏–∫—Å–æ–º
admin_router = APIRouter(
    prefix="/api",
    tags=["üöÄ RocketAdmin API"],
    responses={404: {"description": "–ù–µ –Ω–∞–π–¥–µ–Ω–æ"}}
)


@admin_router.post(
    "/login",
    response_model=CarResponse,
    summary="–ê—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞",
    description="""
        –ê—É—Ç–µ–Ω—Ç–∏—Ñ–∏—Ü–∏—Ä—É–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ –ª–æ–≥–∏–Ω—É –∏ –ø–∞—Ä–æ–ª—é.  
        –ï—Å–ª–∏ –¥–∞–Ω–Ω—ã–µ –≤–µ—Ä–Ω—ã ‚Äî –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ, –µ–≥–æ –º–µ–Ω–µ–¥–∂–µ—Ä–µ –∏ —Å–≤—è–∑–∞–Ω–Ω—ã—Ö –º–∞—à–∏–Ω–∞—Ö.
        
        **–¢—Ä–µ–±—É–µ—Ç—Å—è:**
        - `username` ‚Äî –ª–æ–≥–∏–Ω
        - `password` ‚Äî –ø–∞—Ä–æ–ª—å
        
        **–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç:**
        - `user` ‚Äî –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        - `manager` ‚Äî –¥–∞–Ω–Ω—ã–µ –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –º–µ–Ω–µ–¥–∂–µ—Ä–∞
        - `cars` ‚Äî —Å–ø–∏—Å–æ–∫ –∞–≤—Ç–æ–º–æ–±–∏–ª–µ–π –∫–ª–∏–µ–Ω—Ç–∞
""",
    responses={
        200: {
            "description": "–£—Å–ø–µ—à–Ω—ã–π –≤—Ö–æ–¥",
            "content": {
                "application/json": {
                    "example": {
                        "user": {
                            "name": "–ò–≤–∞–Ω –ò–≤–∞–Ω–æ–≤",
                            "login": "ivan123",
                            "manager": "123"
                        },
                        "manager": {
                            "name": "–ê–Ω–Ω–∞ –ü–µ—Ç—Ä–æ–≤–∞",
                            "number": "79142147067"
                        },
                        "cars": [
                            {
                                "id": "123",
                                "name": "–ò–≤–∞–Ω –ò–≤–∞–Ω–æ–≤",
                                "VIN": "XW8AB45C10J567890",
                                "auto": "Toyota Camry",
                                "year": "2023",
                                "photos": ["https://...jpg"],
                                "status": {
                                    "level": 3,
                                    "description": "–î–æ—Å—Ç–∞–≤–∫–∞ –≤ –†–§",
                                    "datetime": "15.06.2025"
                                }
                            }
                        ]
                    }
                }
            }
        },
        401: {
            "description": "–ù–µ–≤–µ—Ä–Ω—ã–π –ª–æ–≥–∏–Ω –∏–ª–∏ –ø–∞—Ä–æ–ª—å",
            "content": {
                "application/json": {
                    "example": {"detail": "Incorrect login or password"}
                }
            }
        }
    }
)
async def login(request: LoginRequest, security: AdminSecurity = Depends(get_admin_security)):
    """
    ## –í—Ö–æ–¥ –≤ —Å–∏—Å—Ç–µ–º—É
    –ê—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —á–µ—Ä–µ–∑ Bitrix24 –ø–æ –ª–æ–≥–∏–Ω—É –∏ –ø–∞—Ä–æ–ª—é.
    """
    user = await security.auth(username=request.login, password=request.password)
    if user is None:
        raise HTTPException(
            status_code=401,
            detail="Incorrect login or password"
        )
    return CarResponse(
        user=user,
        manager=await security.get_manager(user.manager_id),
        cars=await security.get_cars(user.manager_id),
    )


@admin_router.get(
    "/load-photo/{parent_id}",
    summary="–ü–æ–ª—É—á–∏—Ç—å —Ñ–æ—Ç–æ –ø–æ–≥—Ä—É–∑–∫–∏ –ø–æ ID –º–∞—à–∏–Ω—ã",
    description="""
        –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ø–∏—Å–æ–∫ URL-—Ñ–æ—Ç–æ –ø–æ–≥—Ä—É–∑–∫–∏, —Å–≤—è–∑–∞–Ω–Ω—ã—Ö —Å –∞–≤—Ç–æ–º–æ–±–∏–ª–µ–º.
        
        **–ü–∞—Ä–∞–º–µ—Ç—Ä—ã:**
        - `parent_id` ‚Äî ID –º–∞—à–∏–Ω—ã (–≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏–π –∏–ª–∏ Bitrix ID)
        
        **–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç:**
        - –ú–∞—Å—Å–∏–≤ —Å—Ç—Ä–æ–∫ —Å URL –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π.
        """,
    responses={
        200: {
            "description": "–°–ø–∏—Å–æ–∫ —Ñ–æ—Ç–æ —É—Å–ø–µ—à–Ω–æ –ø–æ–ª—É—á–µ–Ω",
            "content": {
                "application/json": {
                    "example": [
                        "https://your-bitrix.com/upload/123/photo1.jpg",
                        "https://your-bitrix.com/upload/123/photo2.jpg"
                    ]
                }
            }
        },
        404: {
            "description": "–ú–∞—à–∏–Ω–∞ –∏–ª–∏ –ø–æ–≥—Ä—É–∑–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞",
            "content": {
                "application/json": {
                    "example": {"detail": "Car or loading not found"}
                }
            }
        }
    }
)
async def load_photo(parent_id: str, bitrix_repo: BitrixRepository = Depends(get_admin_repository)):
    """
    –ó–∞–≥—Ä—É–∂–∞–µ—Ç —Ñ–æ—Ç–æ –ø–æ–≥—Ä—É–∑–∫–∏, —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Å –∞–≤—Ç–æ–º–æ–±–∏–ª–µ–º.
    """
    photos = await bitrix_repo.get_loading_photos_by_car_id(parent_id)
    return {"phohtos": photos}


@admin_router.post(
    "/change-pass",
    summary="–ò–∑–º–µ–Ω–∏—Ç—å –ø–∞—Ä–æ–ª—å –∫–ª–∏–µ–Ω—Ç–∞",
    description="""
        –û–±–Ω–æ–≤–ª—è–µ—Ç –ø–æ–ª–µ —Å –ø–∞—Ä–æ–ª–µ–º —É –∫–æ–Ω—Ç–∞–∫—Ç–∞ –≤ Bitrix24.
        
        **–¢–µ–ª–æ –∑–∞–ø—Ä–æ—Å–∞:**
        - `id` ‚Äî ID –∫–æ–Ω—Ç–∞–∫—Ç–∞
        - `new` ‚Äî –Ω–æ–≤—ã–π –ø–∞—Ä–æ–ª—å
        
        **–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç:**
        - `success: true` –ø—Ä–∏ —É—Å–ø–µ—Ö–µ.
        """,
    responses={
        200: {
            "description": "–ü–∞—Ä–æ–ª—å —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω—ë–Ω",
            "content": {
                "application/json": {
                    "example": {"success": True}
                }
            }
        },
        400: {
            "description": "–û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è",
            "content": {
                "application/json": {
                    "example": {"success": False, "error": "Contact not found"}
                }
            }
        }
    }
)
async def change(data: ChangePass, bitrix_repo: BitrixRepository = Depends(get_admin_repository)):
    """
    –ò–∑–º–µ–Ω—è–µ—Ç –ø–∞—Ä–æ–ª—å –∫–ª–∏–µ–Ω—Ç–∞ –≤ Bitrix24.
    """
    return await bitrix_repo.update_contact_pass(data.new, data.id)
